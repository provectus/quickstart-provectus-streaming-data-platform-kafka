AWSTemplateFormatVersion: 2010-09-09
Description: Kafka Provisioner. Creates kafka topics based on API requests, schemas and connectors.
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
  QSS3BucketName:
    Type: String
  BootstrapServers:
    Type: String
  PrivateSubnets:
    Type: CommaDelimitedList
  KafkaClientInstanceSecurityGroup:
    Type: String
  KafkaConnectServiceName:
    Type: String

Resources:
  KafkaProvisionerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
        - PolicyName: AllowAssignIP
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeInstances
                  - ec2:AttachNetworkInterface
                Resource: "*"
              
  KafkaTopicsProvisioner:
    Type: AWS::Lambda::Function
    Properties:
      Description: Create Kafka topics based on API request
      Role: !GetAtt KafkaProvisionerRole.Arn
      Runtime: python3.8
      Handler: create_topics.lambda_handler
      MemorySize: 128
      FunctionName: !Sub '${EnvironmentName}-CreateKafkaTopics'
      Code:
        S3Bucket: !Ref QSS3BucketName
        S3Key: sdp-kafka/docker/provisioner/topics/create_topics.zip
      Environment:
        Variables:
          BOOTSTRAP_SERVERS: !Ref 'BootstrapServers'
      VpcConfig:
        SubnetIds: !Ref PrivateSubnets
        SecurityGroupIds: 
          - !Ref KafkaClientInstanceSecurityGroup

  InvokeTopicsProvisionerWalkins:
    Type: Custom::InvokeTopicsProvisionerWalkins
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: walkins
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsProvisionerClicks:
    Type: Custom::InvokeTopicsProvisionerClicks
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: visits
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsProvisionerVisits:
    Type: Custom::InvokeTopicsProvisionerVisits
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: impressions
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsProvisionerImpressions:
    Type: Custom::InvokeTopicsProvisionerImpressions
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: events
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsProvisionerEvents:
    Type: Custom::InvokeTopicsProvisionerEvents
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: clicks
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsProvisionerBids:
    Type: Custom::InvokeTopicsProvisionerBids
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: bids
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsProvisionerAggregates:
    Type: Custom::InvokeTopicsProvisionerAggregates
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: aggregates
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsImpressionsKey:
    Type: Custom::InvokeTopicsImpressionsKey
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: impressions-key
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsClicksKey:
    Type: Custom::InvokeTopicsClicksKey
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: clicks-key
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsBidsKey:
    Type: Custom::InvokeTopicsBidsKey
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: bids-key
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

  InvokeTopicsVisitsTemp:
    Type: Custom::InvokeTopicsVisitsTemp
    Properties:
      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
      KafkaTopic: 
        name: visits-temp
        num_partitions: 4
        replication_factor: 2
      Cause: ''
      Status: ''

#  InvokeTopicsProvisionerKafkaConnectConfigs:
#    Type: Custom::InvokeTopicsProvisionerKafkaConnectConfigs
#    Properties:
#      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
#      KafkaTopic: 
#        name: !Sub '${KafkaConnectServiceName}-configs'
#        num_partitions: 1
#        replication_factor: 3
#      Cause: ''
#      Status: ''
#
#  InvokeTopicsProvisionerKafkaConnectOffsets:
#    Type: Custom::InvokeTopicsProvisionerKafkaConnectOffsets
#    Properties:
#      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
#      KafkaTopic: 
#        name: !Sub '${KafkaConnectServiceName}-offsets'
#        num_partitions: 1
#        replication_factor: 3
#      Cause: ''
#      Status: ''
#
#  InvokeTopicsProvisionerKafkaConnectStatus:
#    Type: Custom::InvokeTopicsProvisionerKafkaConnectStatus
#    Properties:
#      ServiceToken: !GetAtt KafkaTopicsProvisioner.Arn
#      KafkaTopic: 
#        name: !Sub '${KafkaConnectServiceName}-status'
#        num_partitions: 1
#        replication_factor: 3
#      Cause: ''
#      Status: ''